@using AasxServerBlazor.TreeVisualisation
@using AasxServerBlazor.WebActions.AasxLinkCreation
@using AasxServer
@inject NavigationManager NavigationManager
@namespace AasxServerBlazor.Pages.TreeNodeComponents

@code {
    [Parameter] public TreeItem SelectedNode { get; set; }

    private static readonly ExternalLinkCreator ExternalLinkCreator = new();
    private readonly AasxItemLinkService _aasxItemLinkService = new(ExternalLinkCreator);


    private string ItemLink => _aasxItemLinkService.Create(SelectedNode, NavigationManager.Uri, out var externalLink);

    private bool IsSubmodelToPublish => SelectedNode != null && SelectedNode.Tag is Submodel && Program.connectServer != string.Empty && Program.submodelsToPublish.Contains(SelectedNode.Tag);
    private bool IsSubmodelToSubscribe => SelectedNode != null && SelectedNode.Tag is Submodel && Program.connectServer != string.Empty && Program.submodelsToSubscribe.Contains(SelectedNode.Tag);

    private void ResetSubmodelToPublish()
    {
        Program.submodelsToPublish.Remove(SelectedNode.Tag);
    }

    private void SetSubmodelToPublish()
    {
        if (!IsSubmodelToSubscribe)
            Program.submodelsToPublish.Add(SelectedNode.Tag);
    }

    private void ResetSubmodelToSubscribe()
    {
        Program.submodelsToSubscribe.Remove(SelectedNode.Tag);
    }

    private void SetSubmodelToSubscribe()
    {
        if (!IsSubmodelToPublish)
            Program.submodelsToSubscribe.Add(SelectedNode.Tag);
    }

}

@if (SelectedNode != null && ItemLink != string.Empty)
{
    @if (true)
    {
        <a href="@ItemLink" target="_blank">@ItemLink</a>
        <br>
    }
    else
    {
        <button onclick="window.location.href = '@ItemLink'; ">Download</button>
        <br>
    }

    @if (IsSubmodelToPublish)
    {
        <button style="color:white;background-color:blue" @onclick="ResetSubmodelToPublish">Publish</button>
    }
    else
    {
        <button @onclick="SetSubmodelToPublish">Publish</button>
    }

    @if (IsSubmodelToSubscribe)
    {
        <button style="color:white;background-color:blue" @onclick="ResetSubmodelToSubscribe">Subscribe</button>
    }
    else
    {
        <button @onclick="SetSubmodelToSubscribe">Subscribe</button>
    }
}